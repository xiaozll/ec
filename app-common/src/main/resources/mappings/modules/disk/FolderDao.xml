<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eryansky.modules.disk.dao.FolderDao">

    <sql id="folderColumns">
        a.id AS "id",
        a.create_user AS "createUser",
        a.create_time AS "createTime",
        a.status AS "status",
        a.update_user AS "updateUser",
        a.update_time AS "updateTime",
        a.version AS "version",
        a.code AS "code",
        a.folder_authorize AS "folderAuthorize",
        a.limit_size AS "limitSize",
        a.name AS "name",
        a.sort AS "sort",
        a.parent_id AS "parentId",
        a.parent_id AS "parent.id",
		p.name AS "parent.name",
        a.parent_ids AS "parentIds",
        a.path AS "path",
        a.remark AS "remark",
        a.type AS "type",
        a.user_id AS "userId"
    </sql>

    <sql id="folderJoins">
        LEFT JOIN t_disk_folder p ON p.id = a.parent_id
    </sql>

    <select id="get" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
        </where>
        <choose>
            <when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
                ORDER BY ${entityPage.orderBy} ${entityPage.order}
            </when>
            <otherwise>
                ORDER BY a.sort ASC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
        </where>
        <choose>
            <when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
                ORDER BY ${entityPage.orderBy} ${entityPage.order}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="selectMany" resultType="Folder">
		${selectStatement}
	</select>

    <select id="selectOne" resultType="Folder">
		${selectStatement}
	</select>

    <select id="findByParentIdsLike" resultType="Folder">
        SELECT
        a.id,
        a.parent_id AS "parent.id",
        a.parent_ids
        FROM t_disk_folder a
        WHERE a.status = #{STATUS_NORMAL}
        AND a.parent_ids LIKE #{parentIds}
        ORDER BY a.sort ASC
    </select>

    <select id="findChild" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
            AND a.type = #{type}
            <choose>
                <when test="id != null and id !=''">
                    AND a.parent_id = #{id}
                </when>
                <otherwise>
                    AND (a.parent_id IS NULL OR a.parent_id = '')
                </otherwise>
            </choose>
        </where>
        ORDER BY a.sort ASC
    </select>

    <select id="findChilds" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
            <if test="type != null and type !=''">
                AND a.type = #{type}
            </if>
            <if test="id != null and id !=''">
                AND (a.parent_id = #{id} OR a.parent_ids LIKE
                <choose>
                    <when test="dbName == 'db2'">'%,'||#{id}||',%'</when>
                    <when test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</when>
                    <when test="dbName == 'oracle'">'%,'||#{id}||',%'</when>
                    <otherwise>'%,'+#{id}+',%'</otherwise>
                </choose>
                )
            </if>
        </where>
        ORDER BY a.sort ASC
    </select>

    <select id="findChildsIds" resultType="java.lang.String">
        SELECT
        a.id
        FROM t_disk_folder a
        <where>
            a.status = #{status}
            <if test="type != null and type !=''">
                AND a.type = #{type}
            </if>
            <if test="id != null and id !=''">
                AND (a.parent_id = #{id} OR a.parent_ids LIKE
                <choose>
                    <when test="dbName == 'db2'">'%,'||#{id}||',%'</when>
                    <when test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</when>
                    <when test="dbName == 'oracle'">'%,'||#{id}||',%'</when>
                    <otherwise>'%,'+#{id}+',%'</otherwise>
                </choose>
                )
            </if>
        </where>
        ORDER BY a.sort ASC
    </select>

    <select id="findFolders" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
            <if test="userId != null and userId !=''">
                AND a.user_id = #{userId}
            </if>
            <if test="type != null and type !=''">
                AND a.type = #{type}
            </if>
            <if test="folderAuthorize != null and folderAuthorize !=''">
                AND a.folder_authorize = #{folderAuthorize}
            </if>
            <if test="code != null and code !=''">
                AND a.code = #{code}
            </if>
            <if test="parentId != null and parentId !=''">
                AND  a.parent_id = #{parentId}
            </if>
            <if test="excludeFolderId != null and excludeFolderId !=''">
               AND (a.id <![CDATA[ <> ]]> #{excludeFolderId} AND a.parent_ids NOT LIKE
                <choose>
                    <when test="dbName == 'db2'">'%,'||#{excludeFolderId}||',%'</when>
                    <when test="dbName == 'mysql'">CONCAT('%,', #{excludeFolderId}, ',%')</when>
                    <when test="dbName == 'oracle'">'%,'||#{excludeFolderId}||',%'</when>
                    <otherwise>'%,'+#{excludeFolderId}+',%'</otherwise>
                </choose>
                )
            </if>

        </where>
        ORDER BY a.sort ASC
    </select>


    <select id="findNormalTypeAndSystemFoldersByUserId" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
            AND ((a.user_id = #{userId} AND a.folder_authorize = '0')
            OR a.folder_authorize = "1")
            <if test="type != null and type !=''">
                AND a.type = #{type}
            </if>
        </where>
        ORDER BY a.user_id,a.sort ASC
    </select>

    <select id="findFoldersByUserId" resultType="Folder">
        SELECT
        <include refid="folderColumns"/>
        FROM t_disk_folder a
        <include refid="folderJoins"/>
        <where>
            a.status = #{status}
            <if test="userId != null and userId !=''">
                AND a.user_id = #{userId}
            </if>
            <if test="type != null and type !=''">
              AND a.type = #{type}
            </if>
            <if test="folderAuthorize != null and folderAuthorize !=''">
                AND a.folder_authorize = #{folderAuthorize}
            </if>
            <if test="code != null and code !=''">
                AND a.code = #{code}
            </if>
        </where>
        ORDER BY a.sort ASC
    </select>


    <insert id="insert">
        INSERT INTO t_disk_folder(
        id,
        status,
        version,
        create_user,
        create_time,
        update_user,
        update_time,
        code,
        folder_authorize,
        limit_size,
        name,
        sort,
        parent_id,
        parent_ids,
        path,
        remark,
        type,
        user_id
        ) VALUES (
        #{id},
        #{status},
        1,
        #{createUser},
        #{createTime},
        #{updateUser},
        #{updateTime},
        #{code},
        #{folderAuthorize},
        #{limitSize},
        #{name},
        #{sort},
        #{parentId},
        #{parentIds},
        #{path},
        #{remark},
        #{type},
        #{userId}
        )
    </insert>

    <insert id="insertBatch">
        INSERT INTO t_disk_folder(
        id,
        status,
        version,
        create_user,
        create_time,
        update_user,
        update_time,
        code,
        folder_authorize,
        limit_size,
        name,
        sort,
        parent_id,
        parent_ids,
        path,
        remark,
        type,
        user_id
        ) VALUES <foreach collection="list" item="item" separator=",">(
        #{item.id},
        #{item.status},
        1,
        #{item.createUser},
        #{item.createTime},
        #{item.updateUser},
        #{item.updateTime},
        #{item.code},
        #{item.folderAuthorize},
        #{item.limitSize},
        #{item.name},
        #{item.sort},
        #{item.parentId},
        #{item.parentIds},
        #{item.path},
        #{item.remark},
        #{item.type},
        #{item.userId}
        )</foreach>
    </insert>

    <update id="update">
        UPDATE t_disk_folder SET
        status = #{status},
        version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime},
        code = #{code},
        folder_authorize = #{folderAuthorize},
        limit_size = #{limitSize},
        name = #{name},
        sort = #{sort},
        parent_id = #{parentId},
        parent_ids = #{parentIds},
        path = #{path},
        remark = #{remark},
        type = #{type},
        user_id = #{userId}
         WHERE id = #{id}
    </update>

    <delete id="delete">
        UPDATE t_disk_folder SET
        status = #{STATUS_DELETE},
        version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime}
        WHERE id = #{id}
    </delete>


    <delete id="deleteCascadeByFolderId">
        UPDATE t_disk_folder SET
        status = #{STATUS_DELETE},
        version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime}
        WHERE (id = #{id} OR parent_ids LIKE
        <choose>
            <when test="dbName == 'db2'">'%,'||#{id}||',%'</when>
            <when test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</when>
            <when test="dbName == 'oracle'">'%,'||#{id}||',%'</when>
            <otherwise>'%,'+#{id}+',%'</otherwise>
        </choose>
        )
    </delete>

</mapper>