<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eryansky.modules.notice.dao.NoticeDao">

	<sql id="noticeColumns">
		a.id AS "id",
		a.status AS "status",
		a.version AS "version",
		a.create_user AS "createUser",
		a.create_time AS "createTime",
		a.update_user AS "updateUser",
		a.update_time AS "updateTime",
		a.app_id AS "appId",
		a.title AS "title",
		a.head_image AS "headImage",
		a.content AS "content",
		a.type AS "type",
		a.receive_scope AS "receiveScope",
		a.is_top AS "isTop",
		a.end_top_day AS "endTopDay",
		a.is_reply AS "isReply",
		a.biz_mode AS "bizMode",
		a.publish_time AS "publishTime",
		a.effect_time AS "effectTime",
		a.invalid_time AS "invalidTime",
		a.user_id AS "userId",
		a.organ_id AS "organId",
		a.is_record_read AS "isRecordRead",
		a.tip_message AS "tipMessage"
	</sql>

	<sql id="noticeJoins">
		LEFT JOIN t_sys_user u ON u.id = a.user_id
		LEFT JOIN t_sys_organ_extend o ON o.id = a.organ_id
	</sql>

	<select id="get" resultType="Notice">
		SELECT
		<include refid="noticeColumns"/>
		FROM t_notice a
		<include refid="noticeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="Notice">
		SELECT
		<include refid="noticeColumns"/>
		FROM t_notice a
		<include refid="noticeJoins"/>
		<where>
			a.status = #{STATUS_NORMAL}
			<if test="query != null and query != ''">
				AND (a.title LIKE
				<choose>
					<when test="dbName == 'db2'">'%'||#{query}||'%'</when>
					<when test="dbName == 'mysql'">CONCAT('%', #{query}, '%')</when>
					<when test="dbName == 'oracle'">'%'||#{query}||'%'</when>
					<otherwise>'%'+#{query}+'%'</otherwise>
				</choose>
				OR a.content LIKE
				<choose>
					<when test="dbName == 'db2'">'%'||#{query}||'%'</when>
					<when test="dbName == 'mysql'">CONCAT('%', #{query}, '%')</when>
					<when test="dbName == 'oracle'">'%'||#{query}||'%'</when>
					<otherwise>'%'+#{query}+'%'</otherwise>
				</choose>
				)
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="bizMode != null and bizMode != ''">
				AND a.biz_mode = #{bizMode}
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
				ORDER BY ${entityPage.orderBy} ${entityPage.order}
			</when>
			<otherwise>
				ORDER BY a.update_time DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="Notice">
		SELECT
		<include refid="noticeColumns"/>
		FROM t_notice a
		<include refid="noticeJoins"/>
		<where>
			a.status = #{STATUS_NORMAL}
		</where>
		<choose>
			<when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
				ORDER BY ${entityPage.orderBy} ${entityPage.order}
			</when>
			<otherwise>
				ORDER BY a.update_time DESC
			</otherwise>
		</choose>
	</select>


	<select id="selectMany" resultType="Notice">
		${selectStatement}
	</select>

	<select id="selectOne" resultType="Notice">
		${selectStatement}
	</select>


	<select id="findQueryList" resultType="Notice">
		SELECT
		<include refid="noticeColumns"/>
		FROM t_notice a
		<include refid="noticeJoins"/>
		<where>
			a.status = #{status}
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<if test="title != null and title != ''">
				AND a.title LIKE
				<choose>
					<when test="dbName == 'db2'">'%'||#{title}||'%'</when>
					<when test="dbName == 'mysql'">CONCAT('%', #{title}, '%')</when>
					<when test="dbName == 'oracle'">'%'||#{title}||'%'</when>
					<otherwise>'%'+#{title}+'%'</otherwise>
				</choose>
			</if>
			<if test="content != null and content != ''">
				AND a.content LIKE
				<choose>
					<when test="dbName == 'db2'">'%'||#{content}||'%'</when>
					<when test="dbName == 'mysql'">CONCAT('%', #{content}, '%')</when>
					<when test="dbName == 'oracle'">'%'||#{content}||'%'</when>
					<otherwise>'%'+#{content}+'%'</otherwise>
				</choose>
			</if>
			<if test="isTop != null">
				AND a.is_top = #{isTop}
			</if>
			<if test="bizMode != null and bizMode !=''">
				AND a.biz_mode = #{bizMode}
			</if>

			<choose>
				<when test="startTime != null and endTime != null">
					AND a.publish_time BETWEEN #{startTime} AND #{endTime}
				</when>
				<when test="startTime != null and endTime == null">
					AND a.publish_time <![CDATA[>=]]> #{startTime}
				</when>
				<when test="startTime == null and endTime != null">
					AND a.publish_time <![CDATA[<=]]> #{endTime}
				</when>
			</choose>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
				ORDER BY ${entityPage.orderBy} ${entityPage.order}
			</when>
			<otherwise>
				ORDER BY a.update_time DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO t_notice(
		id,
		status,
		version,
		create_user,
		create_time,
		update_user,
		update_time,
		app_id,
		head_image,
		title,
		content,
		type,
		receive_scope,
		is_top,
		end_top_day,
		is_reply,
		biz_mode,
		publish_time,
		effect_time,
		invalid_time,
		user_id,
		organ_id,
		is_record_read,
		tip_message
		) VALUES (
		#{id},
		#{status},
		0,
		#{createUser},
		#{createTime},
		#{updateUser},
		#{updateTime},
		#{appId},
		#{headImage},
		#{title},
		#{content},
		#{type},
		#{receiveScope},
		#{isTop},
		#{endTopDay},
		#{isReply},
		#{bizMode},
		#{publishTime},
		#{effectTime},
		#{invalidTime},
		#{userId},
		#{organId},
		#{isRecordRead},
		#{tipMessage}
		)
	</insert>
	<insert id="insertBatch">
		INSERT INTO t_notice(
		id,
		status,
		version,
		create_user,
		create_time,
		update_user,
		update_time,
		app_id,
		head_image,
		title,
		content,
		type,
		receive_scope,
		is_top,
		end_top_day,
		is_reply,
		biz_mode,
		publish_time,
		effect_time,
		invalid_time,
		user_id,
		organ_id,
		is_record_read,
		tip_message
		) VALUES <foreach collection="list" item="item" separator=",">(
		#{item.id},
		#{item.status},
		0,
		#{item.createUser},
		#{item.createTime},
		#{item.updateUser},
		#{item.updateTime},
		#{item.appId},
		#{item.headImage},
		#{item.title},
		#{item.content},
		#{item.type},
		#{item.receiveScope},
		#{item.isTop},
		#{item.endTopDay},
		#{item.isReply},
		#{item.bizMode},
		#{item.publishTime},
		#{item.effectTime},
		#{item.invalidTime},
		#{item.userId},
		#{item.organId},
		#{item.isRecordRead},
		#{item.tipMessage}
		)</foreach>
	</insert>

	<update id="update">
		UPDATE t_notice SET
		status = #{status},
		version = version +1,
		update_user = #{updateUser},
		update_time = #{updateTime},
		app_id = #{appId},
		head_image = #{headImage},
		title = #{title},
		content = #{content},
		type = #{type},
		receive_scope = #{receiveScope},
		is_top = #{isTop},
		end_top_day = #{endTopDay},
		is_reply = #{isReply},
		biz_mode = #{bizMode},
		publish_time = #{publishTime},
		effect_time = #{effectTime},
		invalid_time = #{invalidTime},
		user_id = #{userId},
		organ_id = #{organId},
		is_record_read = #{isRecordRead},
		tip_message = #{tipMessage}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE t_notice SET
		status = #{STATUS_DELETE},
		version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime}
		WHERE id = #{id}
	</update>


	<!--通知附件-->
	<select id="findFileIdsByNoticeId" resultType="java.lang.String">
		SELECT a.file_id
		FROM t_notice_file a
		WHERE a.notice_id = #{noticeId}
	</select>

	<delete id="deleteNoticeFiles">
		DELETE FROM t_notice_file
		<where>
			<if test="id != null and id !=''">
				AND notice_id = #{id}
			</if>
			<if test="ids != null and ids.size() !=0">
				AND file_id IN <foreach collection="ids" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
		</where>
	</delete>

	<insert id="insertNoticeFiles">
		INSERT INTO t_notice_file(notice_id, file_id)
		<foreach collection="ids" item="item" separator=" union all ">
			SELECT #{id}, #{item} FROM dual
		</foreach>
	</insert>
	<!--通知附件-->

</mapper>