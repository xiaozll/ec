<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eryansky.modules.sys.dao.UserPasswordDao">

    <sql id="userPasswordColumns">
        a.id AS "id",
        a.create_user AS "createUser",
        a.create_time AS "createTime",
        a.status AS "status",
        a.update_user AS "updateUser",
        a.update_time AS "updateTime",
        a.version AS "version",
        a.USER_ID AS "userId",
        a.type AS "type",
        a.MODIFY_TIME AS "modifyTime",
        a.ORIGINAL_PASSWORD AS "originalPassword",
        a.PASSWORD AS "password"
        
    </sql>

    <select id="get" resultType="UserPassword">
        SELECT
        <include refid="userPasswordColumns"/>
        FROM t_sys_user_password a
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="UserPassword">
        SELECT
        <include refid="userPasswordColumns"/>
        FROM t_sys_user_password a
        <where>
            a.status = #{status}
        </where>
        <choose>
            <when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
                ORDER BY ${entityPage.orderBy} ${entityPage.order}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="UserPassword">
        SELECT
        <include refid="userPasswordColumns"/>
        FROM t_sys_user_password a
        <where>
        </where>
        <choose>
            <when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
                ORDER BY ${entityPage.orderBy} ${entityPage.order}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="selectMany" resultType="UserPassword">
		${selectStatement}
	</select>

    <select id="selectOne" resultType="UserPassword">
		${selectStatement}
	</select>

    <select id="findByUserId" resultType="UserPassword">
        SELECT
        <include refid="userPasswordColumns"/>
        FROM t_sys_user_password a
        <where>
            a.status = #{status}
            AND a.user_id = #{userId}
            <if test="types != null and types.size() !=0">
                AND a.type IN
                <foreach collection="types" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        <choose>
            <when test="entityPage !=null and entityPage.orderBy != null and entityPage.orderBy != ''">
                ORDER BY ${entityPage.orderBy} ${entityPage.order}
            </when>
            <otherwise>
                ORDER BY a.MODIFY_TIME DESC
            </otherwise>
        </choose>
    </select>



    <insert id="insert">
        INSERT INTO t_sys_user_password(
        id,
        status,
        version,
        create_user,
        create_time,
        update_user,
        update_time,
        USER_ID,
        type,
        MODIFY_TIME,
        ORIGINAL_PASSWORD,
        PASSWORD
        ) VALUES (
        #{id},
        #{status},
        1,
        #{createUser},
        #{createTime},
        #{updateUser},
        #{updateTime},
        #{userId},
        #{type},
        #{modifyTime},
        #{originalPassword},
        #{password}
        )
    </insert>

    <insert id="insertBatch">
        INSERT INTO t_sys_user_password(
        id,
        status,
        version,
        create_user,
        create_time,
        update_user,
        update_time,
        USER_ID,
        type,
        MODIFY_TIME,
        ORIGINAL_PASSWORD,
        PASSWORD
        ) VALUES <foreach collection="list" item="item" separator=",">(
        #{item.id},
        #{item.status},
        1,
        #{item.createUser},
        #{item.createTime},
        #{item.updateUser},
        #{item.updateTime},
        #{item.userId},
        #{item.type},
        #{item.modifyTime},
        #{item.originalPassword},
        #{item.password}
        )</foreach>
    </insert>

    <update id="update">
        UPDATE t_sys_user_password SET
        status = #{status},
        version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime},
        USER_ID = #{userId},
        type = #{type},
        MODIFY_TIME = #{modifyTime},
        ORIGINAL_PASSWORD = #{originalPassword},
        PASSWORD = #{password}
         WHERE id = #{id}
    </update>

    <delete id="delete">
        UPDATE t_sys_user_password SET
        status = #{STATUS_DELETE},
        version = version +1,
        update_user = #{updateUser},
        update_time = #{updateTime}
        WHERE id = #{id}
    </delete>


    <delete id="clear">
        DELETE FROM t_sys_user_password
        WHERE id = #{id}
    </delete>

    <delete id="clearAll">
        DELETE FROM t_sys_user_password
    </delete>

</mapper>